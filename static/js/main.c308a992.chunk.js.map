{"version":3,"sources":["types/FilterTodos.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["FilterTodos","TodoList","todos","selectedTodo","onSelectedTodo","className","map","todo","classNames","id","completed","title","type","onClick","TodoFilter","query","onQueryChange","selectedFilter","onSelectedFilter","value","onChange","event","target","Object","values","placeholder","style","pointerEvents","All","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","useState","user","setUser","isLoading","setIsLoading","useEffect","userId","finally","href","email","name","App","setTodos","setSelectedTodo","setQuery","setSelectedFilter","todosFromSerwer","filteredTodos","useMemo","todosCopy","normalizedQuery","toLowerCase","trim","filter","includes","Active","Completed","getFilteredTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c308a992.chunk.js","sourcesContent":["export enum FilterTodos {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[],\n  selectedTodo: Todo | null,\n  onSelectedTodo: (todo: Todo) => void,\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodo,\n  onSelectedTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <tr\n          key={todo.id}\n          data-cy=\"todo\"\n          className={classNames({\n            'has-background-info-light': selectedTodo === todo,\n          })}\n        >\n          <td className=\"is-vcentered\">\n            {todo.id}\n          </td>\n          <td className=\"is-vcentered\">\n            {todo.completed && (\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n            <p className={classNames({\n              'has-text-success': todo.completed,\n              'has-text-danger': !todo.completed,\n            })}\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => onSelectedTodo(todo)}\n            >\n              <span className=\"icon\">\n                <i className={classNames(\n                  'far',\n                  {\n                    'fa-eye': selectedTodo !== todo,\n                    'fa-eye-slash': selectedTodo === todo,\n                  },\n                )}\n                />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","import { FilterTodos } from '../../types/FilterTodos';\n\ntype Props = {\n  query: string,\n  onQueryChange: (val: string) => void,\n  selectedFilter: string,\n  onSelectedFilter: (val: FilterTodos) => void,\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  query,\n  onQueryChange,\n  selectedFilter,\n  onSelectedFilter,\n}) => {\n  const resetAllFilters = () => {\n    onQueryChange('');\n    onSelectedFilter(FilterTodos.All);\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={selectedFilter}\n            onChange={(event) => {\n              onSelectedFilter(event?.target.value as FilterTodos);\n            }}\n          >\n            {(Object.values(FilterTodos))\n              .map((value) => (\n                <option\n                  value={value}\n                  key={value}\n                >\n                  {value}\n                </option>\n              ))}\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => onQueryChange(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n        {query && (\n          <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={resetAllFilters}\n            />\n          </span>\n        )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport classNames from 'classnames';\n\nimport { Loader } from '../Loader';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\nimport { getUser } from '../../api';\n\ntype Props = {\n  todo: Todo | null,\n  onSelectedTodo: (todo: Todo | null) => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({ todo, onSelectedTodo }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  useEffect(() => {\n    if (todo?.userId) {\n      getUser(todo.userId)\n        .then(setUser)\n        .finally(() => setIsLoading(false));\n    }\n  }, [todo?.userId]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo?.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => onSelectedTodo(null)}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              <strong className={classNames({\n                'has-text-danger': !todo?.completed,\n                'has-text-success': todo?.completed,\n              })}\n              >\n                {todo?.completed\n                  ? 'Done'\n                  : 'Planned'}\n              </strong>\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useMemo, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { FilterTodos } from './types/FilterTodos';\nimport { getTodos } from './api';\n\nconst getFilteredTodos = (\n  todos: Todo[],\n  query: string,\n  selectedFilter: string,\n) => {\n  let todosCopy = [...todos];\n\n  if (query) {\n    const normalizedQuery = query.toLowerCase().trim();\n\n    todosCopy = todosCopy.filter(({ title }) => (\n      title.toLowerCase().includes(normalizedQuery)\n    ));\n  }\n\n  if (selectedFilter) {\n    todosCopy = todosCopy.filter(({ completed }) => {\n      switch (selectedFilter) {\n        case FilterTodos.Active:\n          return !completed;\n        case FilterTodos.Completed:\n          return completed;\n        default:\n          return todosCopy;\n      }\n    });\n  }\n\n  return todosCopy;\n};\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n  const [query, setQuery] = useState('');\n  const [selectedFilter, setSelectedFilter] = useState<FilterTodos>(FilterTodos.All);\n\n  useEffect(() => {\n    getTodos().then((todosFromSerwer) => {\n      setTodos(todosFromSerwer);\n    }).finally(() => setIsLoading(false));\n  }, []);\n\n  const filteredTodos = useMemo(() => {\n    return getFilteredTodos(todos, query, selectedFilter);\n  }, [todos, query, selectedFilter]);\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                onQueryChange={setQuery}\n                selectedFilter={selectedFilter}\n                onSelectedFilter={setSelectedFilter}\n              />\n            </div>\n\n            <div className=\"block\">\n              {isLoading ? (\n                <Loader />\n              )\n                : (\n                  <TodoList\n                    todos={filteredTodos}\n                    selectedTodo={selectedTodo}\n                    onSelectedTodo={setSelectedTodo}\n                  />\n                )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          todo={selectedTodo}\n          onSelectedTodo={setSelectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}